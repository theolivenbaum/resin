@{
    Layout = "~/Views/_Layout.cshtml";
    ViewBag.Title = "About CrawlCrawler";
}
    <form action="/crawl/" method="post">
        <div class="blog-wrapper">
            <a name="instructions"></a><h1>Instructions</h1>
            <h2>Querying</h2>
            <h3>HTTP GET</h3>
            <p>
                HTTPS GET /query/?field=title&field=description&q=embellished+sheath&OR=OR&skip=0&take=100&collection=cc_wat&select=title<br />
                Accept: application/json (or text/html)
            </p>
            <h4>Hacking the URL</h4>
            <p>
                Specify one or more keywords in the "q" query string parameter.
            </p>
            <p>
                Use one or more "collection" query string parameters to direct your queries towards one or more collections.
            </p>
            <p>
                Use one or more "field" parameters to direct your queries towards one or more fields.
            </p>
            <p>
                Use one or more "select" parameters to define which document fields to include in your search result.
            </p>
            <p>
                Replace "OR=OR" query string entry with "AND=AND" for stricter interpretation of your query.
            </p>
            <p>
                Page by using "skip" and "take" parameters.
            </p>
            <h3>JSON Query with HTTP POST</h3>
            <p>
                Define "skip", "take" and "select" parameters in the query string.
                Include your JSON query in the body of the request.
            </p>
            <p>
                HTTP POST /query/?skip=0&take=100&select=title<br />
                Content-Type:application/json <br />
                Accept: application/json
            </p>
            <pre>
    {
        "and":{
            "collection":"cc_wat",
            "host":"myfashion.com"
        },
        "or":{
            "collection":"cc_wet",
            "description":"prom dress wedding"
        },
        "not":{
            "collection":"cc_wat",
            "path":"kids teens"
        },
    }
            </pre>
            <p>
                There can be no more than one "and", "or" and "not" top-level field per JSON object.
            </p>
            <p>
                If child terms target the same collection as their parent, then you need to specify collection only once.
                There is no limit to the nesting depth other than one you set for yourself:
            </p>
            <pre>
    {
        "or":{
            "collection":"cc_wet",
            "description":"prom",
            "or":{
                "description":"dress",
                "or":{
                    "description":"wedding"
                }
            }
        }
    }
            </pre>
            <h2>Insert, append, update</h2>
            <p>
                You may create new collections and query, append to and update any public read-write enabled collection you know by name.
            </p>
            <h3>HTTP POST Content-Type:application/json</h3>
            <p>
                To be documented.
            </p>
            <h2>Technology</h2>
            <p>
                We build <a href="https://github.com/kreeben/resin/">Resin</a>,
                an open-source and extensible search engine.
            </p>
            <h2>Created by</h2>
            <p>
                This web based service was created by e-commerce solutions architect
                and search handy-man, Marcus Lager from Helsingborg, Sweden.
            </p>
        </div>
    </form>